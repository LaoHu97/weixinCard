<template>
  <div>
    <div class="top">
      <div class="top-center">
        <img :src="logo">
        <h4>{{title}}</h4>
        <span>{{cardno}}（{{uname}}）</span>
      </div>
    </div>
    <div class="center">
      <span style="display:block;text-align: left;padding: 25px;color: #999;">请选择充值面额</span>
      <checker v-model="moneycheck" default-item-class="demo5-item" selected-item-class="demo5-item-selected">
        <checker-item :value="key0" @on-item-click="itemClick">{{key0}}元</checker-item>&nbsp;&nbsp;&nbsp;&nbsp;
        <checker-item :value="key1" @on-item-click="itemClick">{{key1}}元</checker-item>&nbsp;&nbsp;&nbsp;&nbsp;
        <checker-item :value="key2" @on-item-click="itemClick">{{key2}}元</checker-item><br /><br />
        <checker-item :value="key3" @on-item-click="itemClick">{{key3}}元</checker-item>&nbsp;&nbsp;&nbsp;&nbsp;
        <checker-item :value="key4" @on-item-click="itemClick">{{key4}}元</checker-item>&nbsp;&nbsp;&nbsp;&nbsp;
        <x-input v-model="moneynumber" v-bind:class="{ border: isBorder }" placeholder="请输入" class="moneys-input vux-checker-item vux-tap-active demo5-item" type="tel" text-align="center" :max="5" placeholder-align="center" :show-clear="false" @on-focus="textfocus"></x-input>
      </checker>
      <div class="onepx"></div>
      <p style="display: table;float: left;padding: 25px 0 25px 25px;color:#ff9900;font-weight:bold;margin:0;">充值{{money = moneycheck == '' ? moneynumber : moneycheck}}元赠送{{moneygive == '' ? '0' : moneygive }}元</p>
    </div>
    <toast v-model="showPositionValue" type="text" :time="800" is-show-mask text="请输入金额" :position="position"></toast>
    <div v-transfer-dom>
      <loading v-model="loadingShow"></loading>
    </div>
    <box gap="10px 10px">
      <x-button type="primary" @click.native="submitForm('top')">确认支付</x-button>
    </box>
  </div>
</template>

<script>
import { Checker, CheckerItem, Divider, Group, Cell, Popup, XInput, XButton, Box, Toast,  Loading, TransferDomDirective as TransferDom } from 'vux'
export default {
  directives: {
    TransferDom
  },
  components: {
    Checker,
    CheckerItem,
    Divider,
    Group,
    Cell,
    Popup,
    XInput,
    XButton,
    Box,
    Toast,
    Loading
  },
  data () {
    return {
      loadingShow: false,
      position: 'default',
      showPositionValue:false,
      isBorder:false,
      moneynumber: '',
      moneycheck:'',
      moneygive:'',
      cardDepositList:'123',
      money:'',
      mid: '',
      eid: '',
      sid: '',
      oid: '',
      cardCode:'',
      cardId:'',
      cardOpenId:'',
      typepay: '',


      adUrl:'',
      adTargetUrl:'',
      //头部显示值
      logo:'',
      cardno:'',
      uname:'',
      title:'',

      key0:'',
      key1:'',
      key2:'',
      key3:'',
      key4:'',
      value0:'',
      value1:'',
      value2:'',
      value3:'',
      value4:'',
    }
  },
  watch:{
    money:function (val,oldval) {
      if (val==this.key0) {
        this.moneygive = this.value0;
      }else if (val==this.key1) {
        this.moneygive = this.value1;
      }else if (val==this.key2) {
        this.moneygive = this.value2;
      }else if (val==this.key3) {
        this.moneygive = this.value3;
      }else if (val==this.key4) {
        this.moneygive = this.value4;
      }else if (val=='') {
        this.moneygive = '';
      }else {
        var that=this;
        that.$http({
          method: 'post',
          url: COURSES+'/wxcard/queryRuleByAmt',
          data: {
            "amount":val,
            'mid':this.mid,
            'cardId':this.cardId
          }
        }).then(function(res) {
          if (res.data.status==200) {
            that.moneygive=res.data.data.donatePrice;
          }
        });
      }
    }
  },
  methods: {
    textfocus:function () {
      this.moneycheck="";
      this.isBorder=true;
    },
    itemClick:function () {
      this.moneynumber="";
      this.isBorder=false;
    },
    submitForm:function (position) {
      var that=this;
      that.loadingShow=true;
      var reg =/^(([1-9][0-9]*)|([0]\.[1-9]{1})|([0]\.[1-9][0-9]{1})|([0]\.[0-9][1-9]{1})|([1-9][0-9]*\.\d{0,2}))$/;
      if (reg.test(this.money)) {
        that.$http({
          method: 'post',
          url: COURSES+'/cashier/getPrepayInfo',
          data: {
            'amount': String(this.money),
            'discount':String(this.moneygive),
            'mid': this.mid,
            'eid': this.eid,
            'sid': this.sid,
            'oid': this.oid,
            'cardCode':this.cardCode,
            'cardId':this.cardId,
            'cardOpenId':this.cardOpenId,
            'desc': '',
            'type': '1',
            'scene':'D',
          }
        }).then(function(res) {
          that.loadingShow=false;
          var out_trade_no = res.data.data.out_trade_no;
          sessionStorage.setItem('out_trade_no', JSON.stringify(out_trade_no));
          var orderType = "";
          sessionStorage.setItem('orderType', JSON.stringify(orderType));
          WeixinJSBridge.invoke('getBrandWCPayRequest', {
            "appId": res.data.data.appId,
            "timeStamp": res.data.data.timeStamp,
            "nonceStr": res.data.data.nonceStr,
            "package": res.data.data.packages,
            "signType": res.data.data.signType,
            "paySign": res.data.data.paySign
          }, function (res) {
            if (res.err_msg == "get_brand_wcpay_request:ok") {
              that.$router.push({
                path: '/commer',
              });
            } else if (res.err_msg == "get_brand_wcpay_request:cancel") {
              that.$vux.toast.show({
                type:'cancel',
                text: '取消支付'
              })
            } else {
              that.$vux.toast.show({
                type:'warn',
                text: '支付失败'
              })
            }
          });
        });
      }else {
        that.loadingShow=false;
        that.position = position
        that.showPositionValue = true
      }
    },
  },
  mounted() {
    function GetQueryString(name) {
      var reg = new RegExp("(^|&)" + name + "=([^&]*)(&|$)");
      var r = window.location.search.substr(1).match(reg);
      if (r != null) return unescape(r[2]);
      return null;
    }
      var entType = GetQueryString("entType");
      var mid = GetQueryString("mid");
      var eid = GetQueryString("eid");
      var sid = GetQueryString("sid");
      var cardCode = GetQueryString("cardCode");
      var cardId = GetQueryString("cardId");
      var cardOpenId = GetQueryString("cardOpenId");
      var openId=JSON.parse(sessionStorage.getItem('openId'));
      var model = GetQueryString("model");
      var openid = GetQueryString("openid");
      var oid = '';
      if (model == 'FT') {
        oid = openid;
      } else {
        oid = openId;
        var card_Code = '';
        if (openId == null) {
          card_Code = null;
        } else {
          card_Code = '1';
        }
      }
      var openCode = GetQueryString("code");
      var state = GetQueryString("state");
      this.typepay = GetQueryString("type");
      var that = this;
      that.$http({
        method: 'post',
        url: COURSES+'/cashier/getPayMemInfo',
        data: {
          'mid': mid,
          'eid': eid,
          'sid': sid,
          'cardCode': cardCode,
          "cardOpenId":cardOpenId,
          "cardId":cardId,
          "openCode":openCode,
          "state":state,
          'type': this.typepay,
          'scene':'D',
          'entType':entType,
          "isInitCode":card_Code,
          'payOpenId': oid,
          'model': model
        }
      }).then(function(res) {
        if (res.data.status==200) {
          that.logo=res.data.data.logo;
          that.cardno=res.data.data.cardno;
          that.uname=res.data.data.uname;
          that.title=res.data.data.title;
          that.mid = res.data.data.mid;
          that.eid = res.data.data.eId;
          that.sid = res.data.data.storeId;
          that.oid = res.data.data.payOpenId;
          var openId=res.data.data.payOpenId;
          sessionStorage.setItem('openId', JSON.stringify(openId));
          that.cardCode=res.data.data.cardCode;
          that.cardId=res.data.data.cardId;
          that.cardOpenId=res.data.data.cardOpenId;
        }
      });
      that.$http({
        method: 'post',
        url: COURSES+'/wxcard/queryDepositInfo',
        data: {
          'mid': mid,
          "cardId":cardId,
        }
      }).then(function(res) {
        if (res.data.status==200) {
          that.key0=res.data.data.key0;
          that.key1=res.data.data.key1;
          that.key2=res.data.data.key2;
          that.key3=res.data.data.key3;
          that.key4=res.data.data.key4;
          that.value0=res.data.data.value0;
          that.value1=res.data.data.value1;
          that.value2=res.data.data.value2;
          that.value3=res.data.data.value3;
          that.value4=res.data.data.value4;
          that.moneycheck=res.data.data.key0;
        }
      });
  }
}
</script>

<style lang="css">
.border{
  border: 1px solid #1aad19!important
}
.top{
  width: 100%;
  height: 100px;
  background-color: #1aad19;
}
.top .top-center{
  height: 50px;
  padding: 25px;
  color: #fff;
}
.top .top-center h4{
  text-align: left;
  margin: 0;
  line-height:30px;
}
.top .top-center span{
  font-size: 12px;
  display: block;
  text-align: left;
}
.top .top-center img{
  width: 50px;
  height: 50px;
  border-radius: 100%;
  float: left;
  border: 1px solid #fff;
  margin-right: 25px;
}
.demo5-item {
  width: 80px;
  height: 40px;
  line-height: 40px;
  text-align: center;
  border-radius: 3px;
  border: 1px solid #ccc;
  background-color: #fff;
  margin-right: 6px;
}
.demo5-item-selected {
  background: #1aad19;
  border-color: #fff;
  color: #fff;
}
.weui-input{
  width: 80px!important;
  height: 40px!important;
  line-height: 40px!important;
}
.moneys-input{
  width: 80px!important;
  height: 40px!important;
  padding: 0!important;
  display: inline-block!important;
  border: 1px solid #ccc;
  border-radius: 3px;
}
.onepx{
  height: 1px;
  background-color: #999;
  margin: 25px 25px 0 25px;
}
</style>
